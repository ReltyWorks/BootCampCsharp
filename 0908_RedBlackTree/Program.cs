/*
균형이 맞지 않는 트리 편향트리 (skewed tree)
균형이 완벽히 잘 맞는 트리 완전 이진트리 (perfect binary tree)
BST 에는 강제로 균형을 유지하는 규칙이 없음
입력 데이터의 순서에 따라, 최선과 최악 이 나뉨

자기 균형 이진 탐색 트리 (self-balacing BST)
균형이 깨지는걸 대비하기 위해 스스로 복구하는 균형 트리라는게 있다
추가적을 삽입시 스스로 균형을 유지하게끔 만들어진 트리
AVL, RedBlack treee, B Tree 

AVL - 강제로 높이 차이를 1 이내로 제한, 아주 강하게 균형을 잡는다.
ㄴ> 균형을 강하게 잡는 대신, 연산이 많이 이루어짐
RedBlack - 균형유지시 조금 느슨한 제한을 걸어둠
ㄴ> 연산은 상대적으로 적으나, 구현이 매우 어렵다.
최악이나 최선이나 항상 O(log n)의 시간을 보장한다.

레드블랙 트리는 스스로 균형을 유지하는 이진 탐색트리의 한 종류
구현 개념은 빨강, 검정 이라는 색의 개념을 도입
색과 규칙을 통해 편향 트리가 발생되지 않도록 함
레드블랙 트리의 규칙 5가지
ㄴ> 모든 노드는 빨강 또는 검정이다.
ㄴ> 루트는 항상 검정이다.
ㄴ> 모든 리프(NIL)는 검정이다.
ㄴ> 빨강 노드의 자식은 항상 검정노드이다. (빨강 - 빨강 불가)
ㄴ> 루트에서 어떤 리프까지 가는 모든 경로에 있는 검정노드 개수는 동일 하다.

항상 삽입, 삭제, 탐색 O(log n) 시간이 보장이됨

레드 블랙 트리가 무엇인가?
자기 균형 이진 탐색 트리의 한 종류
노드에 색붙이고, 특정 규칙을 통해 트리 높이가 log n에 머물도록 보장
삽입 삭제 탐색 최악의 경우에도 모두 O(log n) 성능 갖음
*/
namespace _0908_RedBlackTree {

}
